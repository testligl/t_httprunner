# NOTE: Generated By HttpRunner v3.1.4
# FROM: testapi\saleApprove.yml


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCaseSaleapprove(HttpRunner):

    config = Config("testcase description").verify(False)

    teststeps = [
        Step(
            RunRequest("/api/bamboo/approveSpu/queryApproveSpuList")
            .post("http://121.14.41.140:5683/api/bamboo/approveSpu/queryApproveSpuList")
            .with_headers(
                **{
                    "Host": "121.14.41.140:5683",
                    "Connection": "keep-alive",
                    "Content-Length": "222",
                    "Accept": "application/json, text/plain, */*",
                    "Origin": "http://121.14.41.140:5683",
                    "Authorization": "${get_authorization()}",
                    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36",
                    "Access-Control-Max-Age": "86000",
                    "Content-Type": "application/json;charset=UTF-8",
                    "Referer": "http://121.14.41.140:5683/bamboo/approval/stay",
                    "Accept-Encoding": "gzip, deflate",
                    "Accept-Language": "zh-CN,zh;q=0.9,en;q=0.8",
                }
            )
            .with_cookies(
                **{"Authorization": "${get_authorization()}", "appId": "${get_appId()}"}
            )
            .with_json(
                {
                    "needPage": True,
                    "current": 1,
                    "size": 10,
                    "pages": 0,
                    "selectParameter": {
                        "productNo": "",
                        "chooseUserName": "李国龙",
                        "createDateStart": "",
                        "createDateEnd": "",
                        "approveUserName": "",
                        "queryType": 1,
                    },
                    "parame": [],
                    "selectParame": [],
                    "orderBy": "",
                }
            )
            .extract()
            .with_jmespath("body.data.records[0].spuId", "spuId")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 200)
            .assert_equal("body.msg", "操作成功")
        ),
        Step(
            RunRequest("/api/bamboo/approveSpu/submitPreSaleApprove")
            .post(
                "http://121.14.41.140:5683/api/bamboo/approveSpu/submitPreSaleApprove"
            )
            .with_headers(
                **{
                    "Host": "121.14.41.140:5683",
                    "Connection": "keep-alive",
                    "Content-Length": "746",
                    "Accept": "application/json, text/plain, */*",
                    "Origin": "http://121.14.41.140:5683",
                    "Authorization": "${get_authorization()}",
                    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36",
                    "Access-Control-Max-Age": "86000",
                    "Content-Type": "application/json;charset=UTF-8",
                    "Referer": "http://121.14.41.140:5683/bamboo/approval/stay",
                    "Accept-Encoding": "gzip, deflate",
                    "Accept-Language": "zh-CN,zh;q=0.9,en;q=0.8",
                }
            )
            .with_cookies(
                **{"appId": "${get_appId()}", "Authorization": "${get_authorization()}"}
            )
            .with_json(
                {
                    "presaleTotal": "555",
                    "presaleStatus": 1,
                    "approvePresaleDto": [
                        {
                            "amount": None,
                            "composition": "面料",
                            "compositionName": None,
                            "price": None,
                            "profit": None,
                            "remark": None,
                            "total": None,
                        },
                        {
                            "amount": None,
                            "composition": "辅料",
                            "compositionName": None,
                            "price": None,
                            "profit": None,
                            "remark": None,
                            "total": None,
                        },
                        {
                            "amount": None,
                            "composition": "工艺类",
                            "compositionName": None,
                            "price": None,
                            "profit": None,
                            "remark": None,
                            "total": None,
                        },
                        {
                            "amount": None,
                            "composition": "加工类",
                            "compositionName": None,
                            "price": None,
                            "profit": None,
                            "remark": None,
                            "total": None,
                        },
                        {
                            "amount": None,
                            "composition": "其他",
                            "compositionName": None,
                            "price": None,
                            "profit": None,
                            "remark": None,
                            "total": None,
                        },
                    ],
                    "spuId": "$spuId",
                    "presaleRemark": "测试预售审核备注_",
                    "spuChangeOrderId": None,
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 200)
            .assert_equal("body.data", True)
            .assert_equal("body.msg", "操作成功")
        ),
    ]


if __name__ == "__main__":
    TestCaseSaleapprove().test_start()
